{"version":3,"sources":["components/common/PageNotFound.js","components/hvac-sentry/Versions.js","components/hvac-sentry/About.js","components/hvac-sentry/Index.js","components/hvac-sentry/PrivacyPolicy.js","App.js","serviceWorker.js","index.js"],"names":["PageNotFound","Versions","version","className","style","href","match","params","useEffect","document","title","About","to","App","exact","from","path","component","PrivacyPolicy","HvacSentry","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2OAMeA,EAJM,WACjB,OAAO,mD,OCcIC,EAfE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAGf,OAFAA,EAAUA,GAAW,EAEd,oCACH,wBAAIC,UAAU,QAAd,WAIA,yBAAKC,MAAO,CAAC,MAASF,EAAU,EAAM,OAAO,KACzC,uBAAGC,UAAU,QAAb,OACA,+EAAoD,uBAAGE,KAAK,gCAAR,WAApD,uDCVG,aAEX,OAAO,oCACH,wBAAIF,UAAU,QAAd,SACA,2MACiL,6BADjL,+RAEgS,6BAFhS,kLAGmL,6BAAK,6BAHxL,gLAIiL,6BAJjL,4BAK6B,uBAAGE,KAAK,gCAAR,WAL7B,sDCDO,cAAc,IAErBH,EAFoB,EAAXI,MAEOC,OAAOL,QAM3B,OAJAM,qBAAU,WACNC,SAASC,MAAQ,gBAClB,IAEI,yBAAKP,UAAU,aAClB,kBAACQ,EAAD,MACA,kBAAC,EAAD,CAAUT,QAASA,IACnB,6BACA,kBAAC,IAAD,CAAMU,GAAI,gCAAV,oBCfO,aAEX,OAAO,oCACH,8CAGA,+DAGA,8HAEA,oRAAyP,uBAAGP,KAAK,uEAAR,iCAAzP,KAEA,sUAGA,8DAEA,gJAEA,uDAEA,6CAEA,4QAEA,4BACI,qCAGJ,0CAEA,0KAEA,4BACI,qCAIJ,uDACA,kJACA,+UACA,8NACA,0DACA,4BACI,4BAAI,oDAAJ,mDACA,4BAAI,uDAAJ,iFACA,4BAAI,qDAAJ,oDAGJ,2CAEA,wFACA,4BACI,mEACA,0EACA,2HACA,oEACA,8GACA,mEACA,gFAGJ,gDACA,0SACA,uNACA,8JACA,iXAEA,kDAEA,kDACA,qIACA,4BACI,iEACA,2FACA,4GACA,oGACA,mEAGJ,gDACA,0TAEA,iDACA,mQACA,iMAIA,oDACA,0QACA,wKAGA,kDACA,oGACA,saAGA,8DACA,oKACA,iNACA,0LAGA,0CACA,sGACA,4BACI,iEC5FGQ,MAZf,WACE,OAAO,yBAAKV,UAAU,kCACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUW,OAAK,EAACC,KAAK,IAAIH,GAAG,iBAC5B,kBAAC,IAAD,CAAOE,OAAK,EAACE,KAAK,8BAA8BC,UAAWC,IAC3D,kBAAC,IAAD,CAAOF,KAAK,wBAAwBC,UAAWE,IAC/C,kBAAC,IAAD,CAAOH,KAAK,gBAAgBC,UAAWE,IACvC,kBAAC,IAAD,CAAOF,UAAWjB,OCFJoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2D,MCTNkB,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OACWhB,SAASiB,eAAe,SDqHrC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0550bbca.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageNotFound = () => {\n    return <h1>404 Page Not Found</h1>\n}\n\nexport default PageNotFound;","import React from 'react';\n\nconst Versions = ({version}) => {\n    version = version || 1.0;\n\n    return <>\n        <h1 className=\"mt-5\">Version</h1>\n\n        {/* add new versions here */}\n\n        <div style={{\"color\": version > 1.0 ? \"grey\":\"\"}}>\n            <p className=\"lead\">1.0</p>\n            <p>This is the first version of HVAC Sentry. Please <a href=\"mailto: mydataorta@gmail.com\">contact</a> me your like/hate or features you want to have.</p>\n        </div>\n    </>\n}\n\nexport default Versions;\n\n\n","import React from 'react';\n\nexport default () => {\n\n    return <>\n        <h1 className=\"mt-5\">About</h1>\n        <p>\n            I used to live in my house equipped with Nest themostat, I was amazed by its rich features, but it is the history feature helped me most to keep aware of energy consumption.<br/>\n            Then I moved to city, rent an apartment... and started seeking for a minimal invasive way that can provide historical data. I was inspired by my very old buddy Moto G 1st gen, which still can make phone calls and ... not much else. But it is still very qualified to be a sentry phone.<br/>\n            Maybe I missed some great Apps out there, but I didn't find one completely satisfy my needs. And I do want to add some features to Nest's historical data idea. So here we are.<br/><br/>\n            I would be very honored that (if) I did something nobel for the world. It will also be my greatest pleasure if you like this almost 0 cost, 0 technical requirement solution.<br/>\n            Please don't hesitate to <a href=\"mailto: mydataorta@gmail.com\">contact</a> me your like/hate or features you want to have. \n        </p>\n    </>\n}\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Versions from './Versions';\nimport About from './About';\n\nexport default ({match}) => {\n\n    let version = match.params.version;\n\n    useEffect(() => {\n        document.title = \"HVAC Sentry\"\n    }, [])\n\n    return <div className=\"container\">\n        <About/>\n        <Versions version={version}/>\n        <hr/>\n        <Link to={\"./hvac-sentry/privacy-policy\"}>Privacy Policy</Link>\n    </div>\n}","import React from 'react';\n\nexport default () => {\n\n    return <>\n        <h1>Privacy Policy</h1>\n\n\n        <p>Effective date: October 18, 2019</p>\n\n\n        <p>HVAC Sentry (\"us\", \"we\", or \"our\") operates the HVAC Sentry mobile application (the \"Service\").</p>\n\n        <p>This page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. Our Privacy Policy  for HVAC Sentry is created with the help of the <a href=\"https://www.freeprivacypolicy.com/free-privacy-policy-generator.php\">Free Privacy Policy Generator</a>.</p>\n\n        <p>We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same meanings as in our Terms and Conditions.</p>\n\n\n        <h2>Information Collection And Use</h2>\n\n        <p>We collect several different types of information for various purposes to provide and improve our Service to you.</p>\n\n        <h3>Types of Data Collected</h3>\n\n        <h4>Personal Data</h4>\n\n        <p>While using our Service, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you (\"Personal Data\"). Personally identifiable information may include, but is not limited to:</p>\n\n        <ul>\n            <li>None</li>\n        </ul>\n\n        <h4>Usage Data</h4>\n\n        <p>When you access the Service by or through a mobile device, we may collect certain information automatically, including, but not limited to:</p>\n            \n        <ul>\n            <li>None</li>\n        </ul>\n        \n\n        <h4>Tracking & Cookies Data</h4>\n        <p>We use cookies and similar tracking technologies to track the activity on our Service and hold certain information.</p>\n        <p>Cookies are files with small amount of data which may include an anonymous unique identifier. Cookies are sent to your browser from a website and stored on your device. Tracking technologies also used are beacons, tags, and scripts to collect and track information and to improve and analyze our Service.</p>\n        <p>You can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Service.</p>\n        <p>Examples of Cookies we use:</p>\n        <ul>\n            <li><strong>Session Cookies.</strong> We use Session Cookies to operate our Service.</li>\n            <li><strong>Preference Cookies.</strong> We use Preference Cookies to remember your preferences and various settings.</li>\n            <li><strong>Security Cookies.</strong> We use Security Cookies for security purposes.</li>\n        </ul>\n\n        <h2>Use of Data</h2>\n\n        <p>HVAC Sentry uses the collected data for various purposes:</p>\n        <ul>\n            <li>To provide and maintain the Service</li>\n            <li>To notify you about changes to our Service</li>\n            <li>To allow you to participate in interactive features of our Service when you choose to do so</li>\n            <li>To provide customer care and support</li>\n            <li>To provide analysis or valuable information so that we can improve the Service</li>\n            <li>To monitor the usage of the Service</li>\n            <li>To detect, prevent and address technical issues</li>\n        </ul>\n\n        <h2>Transfer Of Data</h2>\n        <p>Your information, including Personal Data, may be transferred to — and maintained on — computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.</p>\n        <p>If you are located outside United States and choose to provide information to us, please note that we transfer the data, including Personal Data, to United States and process it there.</p>\n        <p>Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.</p>\n        <p>HVAC Sentry will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.</p>\n\n        <h2>Disclosure Of Data</h2>\n\n        <h3>Legal Requirements</h3>\n        <p>HVAC Sentry may disclose your Personal Data in the good faith belief that such action is necessary to:</p>\n        <ul>\n            <li>To comply with a legal obligation</li>\n            <li>To protect and defend the rights or property of HVAC Sentry</li>\n            <li>To prevent or investigate possible wrongdoing in connection with the Service</li>\n            <li>To protect the personal safety of users of the Service or the public</li>\n            <li>To protect against legal liability</li>\n        </ul>\n\n        <h2>Security Of Data</h2>\n        <p>The security of your data is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.</p>\n\n        <h2>Service Providers</h2>\n        <p>We may employ third party companies and individuals to facilitate our Service (\"Service Providers\"), to provide the Service on our behalf, to perform Service-related services or to assist us in analyzing how our Service is used.</p>\n        <p>These third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.</p>\n\n\n\n        <h2>Links To Other Sites</h2>\n        <p>Our Service may contain links to other sites that are not operated by us. If you click on a third party link, you will be directed to that third party's site. We strongly advise you to review the Privacy Policy of every site you visit.</p>\n        <p>We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.</p>\n\n\n        <h2>Children's Privacy</h2>\n        <p>Our Service does not address anyone under the age of 18 (\"Children\").</p>\n        <p>We do not knowingly collect personally identifiable information from anyone under the age of 18. If you are a parent or guardian and you are aware that your Children has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from children without verification of parental consent, we take steps to remove that information from our servers.</p>\n\n\n        <h2>Changes To This Privacy Policy</h2>\n        <p>We may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page.</p>\n        <p>We will let you know via email and/or a prominent notice on our Service, prior to the change becoming effective and update the \"effective date\" at the top of this Privacy Policy.</p>\n        <p>You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.</p>\n\n\n        <h2>Contact Us</h2>\n        <p>If you have any questions about this Privacy Policy, please contact us:</p>\n        <ul>\n            <li>By email: mydataorta@gmail.com</li>\n\n        </ul>\n    </>\n}\n","import React from 'react';\n\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport PageNotFound from \"./components/common/PageNotFound\";\nimport HvacSentry from \"./components/hvac-sentry/Index\";\nimport PrivacyPolicy from './components/hvac-sentry/PrivacyPolicy';\n\nfunction App() {\n  return <div className=\"container-fluid main-container\" >\n    <Switch>\n      <Redirect exact from='/' to='/hvac-sentry' />\n      <Route exact path='/hvac-sentry/privacy-policy' component={PrivacyPolicy} />\n      <Route path='/hvac-sentry/:version' component={HvacSentry} />\n      <Route path='/hvac-sentry/' component={HvacSentry} />\n      <Route component={PageNotFound} />\n    </Switch>\n  </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}